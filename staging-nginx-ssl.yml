version: "3"

volumes:
  app_postgres_data: { }

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/Dockerfile-django
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.staging
    ports:
      - "8000:8000"
    command: /scripts/start-django-staging

  postgres:
    image: "postgres:12.3"
    volumes:
      - app_postgres_data:/var/lib/postgresql/data:Z
    env_file:
      - ./.envs/.staging
    ports:
      - "5432:5432"

  redis:
    image: redis:5.0

  celeryworker:
    <<: *django
    depends_on:
      - redis
      - postgres
    ports: [ ]
    command: /scripts/start-celeryworker

  celerybeat:
    <<: *django
    depends_on:
      - redis
      - postgres
    ports: [ ]
    command: /scripts/start-celerybeat

  celeryflower:
    <<: *django
    ports:
      - "5555:5555"
    command: /scripts/start-celeryflower

  nginx:
    image: nginx:1.17.4-alpine
    restart: unless-stopped
    volumes:
      - .:/app
      - ./compose/certbot/conf:/etc/letsencrypt
      - ./compose/certbot/www:/var/www/certbot
      - ./compose/nginx/docker-nginx-ssl.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - django
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot:v0.36.0
    restart: unless-stopped
    volumes:
      - ./compose/certbot/conf:/etc/letsencrypt
      - ./compose/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 5d & wait $${!}; done;'"
